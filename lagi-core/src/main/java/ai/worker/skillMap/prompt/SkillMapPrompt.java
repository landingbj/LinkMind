package ai.worker.skillMap.prompt;

public class SkillMapPrompt {

    public static final String KEYWORD_PROMPT_TEMPLATE = "当用户向系统提问时，你需要首先对问题进行自然语言处理（NLP）。通过NLP技术，你的任务是理解用户的意图，识别问题中的关键词，并将问题进行分类。具体步骤如下：\n" +
            "\n" +
            "问题：\n" +
            "{}\n" +
            "\n" +
            "##字段说明:\n" +
            "keywords 类型：[string] 内容描述：和用户意图有关的关键词列表不包含时间地名人物 \n" +
            "#执行要求\n" +
            "1.严格遵循字段说明，不得进行任何推测。\n" +
            "2.当某个字段未找到能准确符合字段提取内容时，输出为\"无\"。\n" +
            "3.仅输出 JSON 格式，不要输出任何解释性文字。 例如：{\"keywords\":[]}\n" +
            "4.确保输出能被可以由python json.loads解析\n" +
            "5.确保 JSON 结构清晰，字段名称与内容准确对应。";

    public static final String KEYWORD_USER_PROMPT = "请提取一下用户的意图里的关键词";

    public static final String SCORE_PROMPT_TEMPLATE = "你是一个问答分析专家，你需要首先对问题和给出的回答进行自然语言处理（NLP）。通过NLP技术，你的任务是分析问题与回答的相关性并进行打分：\n" +
            "\n" +
            "问题：\n" +
            "{}\n" +
            "回答：\n" +
            "{}\n" +
            "\n" +
            "打分规则：\n" +
            "当问题是图片、音频、视频等生成任务时, 明确告知图片、音频、视频生成成功给 10分 \n" +
            "当问题是图片、音频、视频等生成任务时, 仅提供思路 -10分 \n" +
            "当回答表示无法获取相应的数据时 给出负的分数 -10分\n"+
            "当回答表示抱歉遗憾等愧疚的意思时 给出负的分数 -5 分\n" +
            "当回答表示遗憾并给出一般通用回答是： 给出负向分数  -3\n" +
            "当回答表示需要要求用户联网查询数据或缺少相应的数据： 给出负向分数  -3\n" +
            "当回答表示用户可以出网站查询数据： 给出负向分数  -3\n" +
            "当回答表示基于所学知识回答而不是结合额外数据库： 给出正向分数 分数区间0-5\n" +
            "当回答里收集信息完整结构完整语义明确： 给出正向分数 分数区间5-10\n" +
            "\n" +
            "##字段说明:\n" +
            "score： 问答相关性评分\n" +
            "#执行要求\n" +
            "1.严格遵循字段说明，不得进行任何推测。\n" +
            "2.当某个字段未找到能准确符合字段提取内容时，输出为\"无\"。\n" +
            "3.仅输出 JSON 格式，不要输出任何解释性文字。例如：{\"score\": 0}\n" +
            "4.确保 JSON 结构清晰，字段名称与内容准确对应。";

    public static final String SCORE_USER_PROMPT = "请根据评分标准给出问题和答案的相关性评分";


    public static final String AGENT_PICK_PROMPT_TEMPLATE = "你是一个智能体匹配专家，你的任务是根据用户输入的提示词，从给定的智能体列表中选择最合适的智能体，并返回对应的ID。以下是具体规则：\n" +
            "\n" +
            "1. **任务分析**：\n" +
            "   - 用户输入的提示词是需要解决的问题或请求。\n" +
            "   - 智能体列表包含专业型和通用型智能体。专业型智能体的描述中明确标注了其擅长处理的领域（如“医疗诊断”“编程问题”等），而通用型智能体的描述中包含“通用”“所有问题”等关键词。\n" +
            "\n" +
            "2. **匹配逻辑**：\n" +
            "   - **优先匹配专业智能体**：遍历列表列表, 分析智能体能进行的动作(如 搜索、查询、生成、 绘制) 能处理的具体专业领域 (如: 营销、健康、 商务、 姓氏) 、限制条件(如：只xxx, 不能xxxx),  结合用户的问题匹配一个完全符合的专业智能体\n" +
            "   - **无专业匹配时选择通用智能体**：若列表中无专业智能体能匹配用户问题，则选择通用型智能体（确保列表中至少有一个通用智能体）。\n" +
            "   - **多匹配时的处理**：若多个专业智能体部分匹配，选择描述中与用户问题最直接相关的智能体（例如，用户问“肺癌治疗方案”，优先选“医疗诊断”而非“健康咨询”）。\n" +
            "\n" +
            "3. **输出格式**：\n" +
            "   - 返回一个JSON数组，格式为 `[{\"id\": 0}]`，其中`id`是匹配到的智能体的ID 必须是下列数组中的一个或多个 {}\n"  +
            "   - **禁止其他输出**：仅返回JSON数组，不添加解释或额外文本。\n" +
            "\n" +
            "4. **示例参考**：\n" +
            "   - **输入**：用户问“帮我查询小米SU7的车况信息”\n" +
            "     - 列表中有`指定品牌型号的车辆的参数信息` id:-29 ，则返回 `[{\"id\":-29}]`。\n" +
            "   - **输入**：用户问“请给我推荐几辆预算15万以内的新能源小汽车，并说明它们的优缺点”\n" +
            "     - 若列表中无“车辆推荐”专业智能体，则返回通用智能体的ID（如`[{\"id\":0}]`）。\n" +
            "\n" +
            "5. **关键要求**：\n" +
            "   - **严格遵循格式**：输出必须是有效的JSON数组，且仅包含`id`字段。\n" +
            "   - **准确匹配**：优先专业领域，避免误判为通用型。\n" +
            "6. **已知的智能体列表:\n**" +
            "{}";

    public static final String AGENTS_PICK_SYSTEM_PROMPT = "你是一位智能体匹配专家，需依据用户输入内容，逐个对比智能体描述，判断是否高度契合。匹配规则如下：\n" +
            "\n" +
            "1. 匹配具备相应描述能力的智能体。例如，若用户输入 “搜索一张图片”，则应匹配具有图片搜索能力的智能体，而非图片生成绘制类智能体。\n" +
            "2. 完成匹配后需反复核查，保留更符合要求的智能体。例如，用户输入 “搜索一张动漫图片”，若智能体列表中有 “图片搜索智能体” 和 “动漫图片搜索智能体”，则需保留 “动漫图片搜索智能体”，排除 “图片搜索智能体”；若用户输入 “搜索一张风景图片”，则需排除 “动漫搜索智能体”，保留 “图片搜索智能体”。\n" +
            "\n" +
            "有两种返回结果的方式：\n" +
            "\n" +
            "当能匹配到智能体时，按如下格式返回：\n" +
            "[{\"id\": number, \"reason\": \"string\"}, {\"id\": number, \"reason\": \"string\"}]\n" +
            "（示例：[{\"id\": 1, \"reason\": \"用户需求为搜索动漫图片，该智能体具备动漫图片搜索能力\"}, {\"id\": 3, \"reason\": \"用户需求为搜索动漫图片，该智能体具备动漫图片搜索能力\"}]）\n" +
            "当没有智能体匹配时，返回：\n" +
            "[{\"id\": 0, \"reason\": \"没有专业的智能体匹配到\"}]\n" +
            "\n" +
            "智能体列表如下：{}";

}

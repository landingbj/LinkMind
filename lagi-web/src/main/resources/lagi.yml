system_title: LinkMind

models:

  # qwen (TongyiQianwen) is an advanced large-scale language model developed by Alibaba Cloud
  - name: qwen
    type: Alibaba
    enable: true
    model:  qwen-turbo,
            qwen-plus,qwen-max,qwen-max-1201,qwen-max-longcontext,
            asr,
            vision,
            ocr
    # Options for default, llm, voice, vision and ocr, line by line above.
    driver: ai.wrapper.impl.AlibabaAdapter
    # help document https://help.aliyun.com/document_detail/2712195.html?spm=a2c4g.2712576.0.0.733b3374np40s0
    api_key: your-api-key # url address  https://bailian.console.aliyun.com/#/home
    access_key_id: your-access-key-id
    access_key_secret: your-access-key-secret

  # DeepSeek is an open source large language model launched by DeepSeek.
  - name: deepseek
    type: DeepSeek
    enable: true
    model: deepseek-chat
    driver: ai.llm.adapter.impl.DeepSeekAdapter
    api_address: https://api.deepseek.com/chat/completions
               # https://ark.cn-beijing.volces.com/api/v3/chat/completions
               # https://dashscope.aliyuncs.com/compatible-mode/v1
               # https://qianfan.baidubce.com/v2/chat/completions
               # https://api.lkeap.cloud.tencent.com/v1
    api_key: your-api-key # url address https://platform.deepseek.com/api_keys

include_models: model.yml


stores:

  vector:
    # Chroma is an AI-native open-source embedding database
    # The official website is https://www.trychroma.com/
    - name: chroma
      driver: ai.vector.impl.ChromaVectorStore
      default_category: default
      similarity_top_k: 10
      similarity_cutoff: 0.5
      parent_depth: 1
      child_depth: 1
      url: http://localhost:8000

  rag: # RAG enhances large language models by integrating external knowledge retrieval.
    vector: chroma
    term: elastic
    graph: landing
    enable: false
    priority: 10
    track: true
    default: "Please give prompt more precisely"

  medusa: # Medusa is a caching tool designed to accelerate the response of large models.
    enable: false
    algorithm: hash,graph,llm
    aheads: 1
    producer_thread_num: 1
    consumer_thread_num: 2
    flush: false
    cache_hit_window: 16
    cache_hit_ratio: 0.3
    temperature_tolerance: 0.1
    inits: '你好,
            介绍一下你自己,
            感冒发烧了，除了吃药还有哪些方法？,
            预测新能源汽车未来 5 年的发展趋势未来的发展趋势？
            推荐一些生日礼物,
            健康减脂食谱推荐,
            提供一些第一次一个人出门旅行的建议,
            我要去旅游，推荐几个小众好玩的地方,
            给我推荐一些中国必吃的美食,
            推荐一些好看的电影'

include_stores: store.yml


functions:
  embedding:
    - backend: qwen
      type: Qwen
      api_key: you-api-key

  chat:
    route: best((landing&qwen),(kimi|chatgpt))
    filter: sensitive,priority,stopping,continue
    backends:
      - backend: landing
        model: cascade
        enable: true
        stream: true
        priority: 350

      - backend: kimi
        model: moonshot-v1-8k
        enable: false
        stream: true
        priority: 150

      - backend: chatgpt
        model: gpt-3.5-turbo
        enable: false
        stream: true
        priority: 120

      - backend: qwen
        model: qwen-turbo
        enable: true
        stream: true
        priority: 300

  translate:
    - backend: ernie
      model: translate
      enable: true
      priority: 10

  speech2text:
    - backend: qwen
      model: asr
      enable: true
      priority: 10

  text2speech:
    - backend: landing
      model: tts
      enable: true
      priority: 10

  speech2clone:
    - backend: doubao
      model: openspeech
      enable: true
      priority: 10
      others: your-speak-id

  text2image:
    - backend: spark
      model: tti
      enable: true
      priority: 10
    - backend: ernie
      model: Stable-Diffusion-XL
      enable: true
      priority: 5

  image2text:
    - backend: ernie
      model: Fuyu-8B
      enable: true
      priority: 10

  image2enhance:
    - backend: ernie
      model: enhance
      enable: true
      priority: 10

  text2video:
    - backend: landing
      model: video
      enable: true
      priority: 10

  image2video:
    - backend: qwen
      model: vision
      enable: true
      priority: 10

  video2track:
    - backend: landing
      model: video
      enable: true
      priority: 10

  video2enhance:
    - backend: qwen
      model: vision
      enable: true
      priority: 10

  doc2ocr:
    - backend: qwen
      model: qwen-vl-ocr
      enable: true
      priority: 15

  doc2instruct:
    - backend: landing
      model: cascade
      enable: true
      priority: 10

  text2sql:
    - backend: landing
      model: cascade
      enable: true
      priority: 10

  doc2ext:
    - backend: landing
      model: cascade
      enable: true
      priority: 10

  doc2struct:
    - backend: landing
      model: cascade
      enable: true
      priority: 10

  text2qa:
    enable: true
    model: cascade


# The following is the configuration of agents, name is the name of the agent,
# type is the type of the agent, class is the implement class of the agent.
agents:
  # Agent for stock queries, providing stock market information, analysis, and related services.
  - name: stock
    wrong_case: 抱歉
    token: your-token
    app_id: your-app-id
    driver: ai.agent.chat.coze.CozeAgent

  # Agent for weather queries, helping users obtain real-time weather information and forecasts.
  - name: weather
    token: your-token
    driver: ai.agent.customer.WeatherAgent

include_agents: agent.yml


mcps:
  # set default driver
  servers:
    - name: amap_mcp
      url: https://mcp.amap.com/sse?key=your-key

include_mcps: mcp.yml


pnps:
  # pnp for QQ chat application automation, enabling social interactions and services.
  - name: qq
    api_key: your-api-key
    driver: ai.pnps.social.QQPnp

include_pnps: pnp.yml


# The following is the configuration of workers, name is the name of the worker,
# agent is the agent used by the worker, class is the implement class of the worker.
workers:
  - name: qq-robot
    agent: qq
    route: pass(qq)
    worker: ai.worker.social.RobotWorker

  - name: wechat-robot
    agent: wechat
    route: pass(wechat)
    worker: ai.worker.social.RobotWorker

  - name: ding-robot
    agent: ding
    route: pass(ding)
    worker: ai.worker.social.RobotWorker

  # Example for Airport Enhancement
  - name: asr4flights
    worker: ai.worker.social.Asr4FlightsWorker

  - name: BestWorker
    route: best(weather&oil)
    worker: ai.worker.DefaultBestWorker

  - name: appointedWorker
    route: pass(%)
    worker: ai.worker.DefaultAppointWorker


routers:
  - name: best
    rule: (|,&)
    # A|B -> polling,  A or B, means randomly round-robin within A and B;
    # A,B -> failover, first A, if A fail, then B;
    # A&B -> parallel, call A and B concurrently, choose the proper only one result;
    # The rule could be combined like ((A&B&C),(E|F)) which means first call ABC simultaneously, if fail, then call E or F randomly.

  - name: pass
    rule: (%)
    # % is a wildcard to represent agent name.
    # if specified, invoke this agent.
    # if just % is given, % would be decided by parameter at calling time.





# Filter rules for sensitive words or sentence, with priority and etc.
filters:
  # Sensitive words filter
  - name: sensitive
    groups:
      # Mask sensitive words/sentences with stars "*"
      - level: mask
        rules: 'openai,FLG,
                维尼熊,
                เสรีภาพ,ประชาธิปไตย,กษัตริย์,รัฐประหาร,สื่อ,ม็อบ,อิสรภาพ'
      # Erase sensitive words/sentences
      - level: erase
        # Rule Explanation: A single rule supports regular expressions but requires using \\, to replace the original ,
        rules: 'your context,
                根据\w{0\\,6}上下文,依据您提供的上下文,
                ぶんみゃくにもとづいて,せいじてき,いけん,しそう'
      # Block the output of sensitive words/sentences
      - level: block
        rules: 'shit,CNM,
                六四,
                цензура,протест,революция,права человека'
  # Index words with high priority
  - name: priority
    rules: 'car,weather,
            社*保'
  # Keywords to mark the lifecycle end of a multiple round conversation
  # Or the beginning of a new conversation.
  - name: stopping
    rules: 'bye,
            开始*'
  # Keywords to mark the continuation of conversation, within multiple round.
  - name: continue
    rules: 'about,next,then,
            资料'
